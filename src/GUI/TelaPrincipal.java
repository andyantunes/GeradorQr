/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;

/**
 *
 * @author Andy_Antunes
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public TelaPrincipal() {
        initComponents();
        
        setIcon();
        
        setConfDefault();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelFormatoImagem = new javax.swing.JPanel();
        pngBox = new javax.swing.JCheckBox();
        jpgBox = new javax.swing.JCheckBox();
        jLabelTamanhoImagem = new javax.swing.JLabel();
        jSliderTamanhoImagem = new javax.swing.JSlider();
        jLabelNomeArquivo = new javax.swing.JLabel();
        txtParaNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnLimparNome = new javax.swing.JButton();
        jLabelConteudoQR = new javax.swing.JLabel();
        jScrollPane1ConteudoQR = new javax.swing.JScrollPane();
        txtParaQrCode = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnGerarQrCode = new javax.swing.JButton();
        btnLimparTexto = new javax.swing.JButton();
        jLabelFundo = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuArquivo = new javax.swing.JMenu();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuInfo = new javax.swing.JMenu();
        jMenuItemSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LTA Service");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(121, 147, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelFormatoImagem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Formato da Imagem", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        jPanelFormatoImagem.setOpaque(false);

        pngBox.setText("PNG");
        pngBox.setOpaque(false);
        pngBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pngBoxActionPerformed(evt);
            }
        });

        jpgBox.setText("JPG");
        jpgBox.setOpaque(false);
        jpgBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpgBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFormatoImagemLayout = new javax.swing.GroupLayout(jPanelFormatoImagem);
        jPanelFormatoImagem.setLayout(jPanelFormatoImagemLayout);
        jPanelFormatoImagemLayout.setHorizontalGroup(
            jPanelFormatoImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormatoImagemLayout.createSequentialGroup()
                .addComponent(pngBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpgBox)
                .addContainerGap())
        );
        jPanelFormatoImagemLayout.setVerticalGroup(
            jPanelFormatoImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormatoImagemLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanelFormatoImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pngBox)
                    .addComponent(jpgBox))
                .addGap(10, 10, 10))
        );

        jPanel1.add(jPanelFormatoImagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 10, -1, -1));

        jLabelTamanhoImagem.setText("Tamanho da imagem em (cm)");
        jPanel1.add(jLabelTamanhoImagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 92, -1, -1));

        jSliderTamanhoImagem.setMajorTickSpacing(1);
        jSliderTamanhoImagem.setMaximum(10);
        jSliderTamanhoImagem.setMinimum(1);
        jSliderTamanhoImagem.setPaintLabels(true);
        jSliderTamanhoImagem.setOpaque(false);
        jSliderTamanhoImagem.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderTamanhoImagemStateChanged(evt);
            }
        });
        jPanel1.add(jSliderTamanhoImagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 112, -1, -1));

        jLabelNomeArquivo.setText(" Nome do Arquivo");
        jPanel1.add(jLabelNomeArquivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 167, -1, -1));
        jPanel1.add(txtParaNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 187, 330, 25));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/help.png"))); // NOI18N
        jLabel2.setToolTipText("Digite o nome do seu arquivo");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 189, 30, 20));

        btnLimparNome.setText("Limpar Nome");
        btnLimparNome.setOpaque(false);
        btnLimparNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparNomeActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 218, -1, -1));

        jLabelConteudoQR.setText("Conteúdo do QR Code");
        jPanel1.add(jLabelConteudoQR, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 259, -1, -1));

        txtParaQrCode.setColumns(20);
        txtParaQrCode.setLineWrap(true);
        txtParaQrCode.setRows(5);
        jScrollPane1ConteudoQR.setViewportView(txtParaQrCode);

        jPanel1.add(jScrollPane1ConteudoQR, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 279, 330, 70));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/help.png"))); // NOI18N
        jLabel1.setToolTipText("Digite a sua URL  (http://exemplo.com.br)");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 299, 30, 30));

        btnGerarQrCode.setText("Gerar QR Code");
        btnGerarQrCode.setOpaque(false);
        btnGerarQrCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarQrCodeActionPerformed(evt);
            }
        });
        jPanel1.add(btnGerarQrCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        btnLimparTexto.setText("Limpar Texto");
        btnLimparTexto.setOpaque(false);
        btnLimparTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparTextoActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 360, -1, -1));

        jLabelFundo.setBackground(new java.awt.Color(134, 154, 237));
        jLabelFundo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fundo.png"))); // NOI18N
        jLabelFundo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelFundo.setMaximumSize(new java.awt.Dimension(32, 14));
        jLabelFundo.setMinimumSize(new java.awt.Dimension(32, 14));
        jLabelFundo.setPreferredSize(new java.awt.Dimension(32, 14));
        jPanel1.add(jLabelFundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 400));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 400));

        jMenuArquivo.setText("Arquivo");

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSair);

        jMenuBar.add(jMenuArquivo);

        jMenuInfo.setText("Informações");

        jMenuItemSobre.setText("Sobre");
        jMenuItemSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSobreActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemSobre);

        jMenuBar.add(jMenuInfo);

        setJMenuBar(jMenuBar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuItemSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSobreActionPerformed
        new TelaSobre().setVisible(true);
    }//GEN-LAST:event_jMenuItemSobreActionPerformed

    private void pngBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pngBoxActionPerformed
        if(pngBox.isSelected())
        //Seta 175 e 225 como falso p/ nao poder selecionar ais de uma opção
        jpgBox.setSelected(false);
        //Seta 125 como verdadeiro p/ não poder desmarcar clicando nele mesmo
        pngBox.setSelected(true);
    }//GEN-LAST:event_pngBoxActionPerformed

    private void jpgBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpgBoxActionPerformed
        if(jpgBox.isSelected())
        //Seta 175 e 225 como falso p/ nao poder selecionar ais de uma opção
        pngBox.setSelected(false);
        //Seta 125 como verdadeiro p/ não poder desmarcar clicando nele mesmo
        jpgBox.setSelected(true);
    }//GEN-LAST:event_jpgBoxActionPerformed

    private void jSliderTamanhoImagemStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderTamanhoImagemStateChanged

    }//GEN-LAST:event_jSliderTamanhoImagemStateChanged

    private void btnLimparNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparNomeActionPerformed
        txtParaNome.setText(null);
    }//GEN-LAST:event_btnLimparNomeActionPerformed

    private void btnGerarQrCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarQrCodeActionPerformed
        int size = 0;
        String extArq = "";
        String extArqNome = "";
        float px = 37.795275590551f;
        int cm = jSliderTamanhoImagem.getValue();
        //String conteudoArquivo = txtParaQrCode.getText();
        //String tituloArquivo = txtParaNome.getText();

        if (!"".equals(txtParaNome.getText()) && !"".equals(txtParaQrCode.getText())) {
            //Condições para setar a extensão da imagem
            if (pngBox.isSelected()) {
                extArqNome = ".png";
            }else if (jpgBox.isSelected()) {
                extArqNome = ".jpg";
            }

            //Condições para setar a extensão da imagem
            if (pngBox.isSelected()) {
                extArq = "PNG";
            }else if (jpgBox.isSelected()) {
                extArq = "JPG";
            }

            //Condições para setar o tamanho da imagem (jSlider)
            switch (jSliderTamanhoImagem.getValue()) {
                case 1:
                size = (int) px;
                break;
                case 2:
                size = (int) px * 2;
                break;
                case 3:
                size = (int) px * 3;
                break;
                case 4:
                size = (int) px * 4;
                break;
                case 5:
                size = (int) px * 5;
                break;
                case 6:
                size = (int) px * 6;
                break;
                case 7:
                size = (int) px * 7;
                break;
                case 8:
                size = (int) px * 8;
                break;
                case 9:
                size = (int) px * 9;
                break;
                case 10:
                size = (int) px * 10;
                break;
                default:
                break;
            }

            //Condições para setar o tamanho da imagem (jCheckbox)
            /*if (tam125Box.isSelected()) {
                size = size + 125;
            }else if (tam175Box.isSelected()) {
                size = size + 175;
            }else if (tam225Box.isSelected()) {
                size = size + 225;
            }*/
            String nomeArquivo = txtParaNome.getText() + extArqNome;
            try {
                try (FileOutputStream f = new FileOutputStream(nomeArquivo)) {
                    ByteArrayOutputStream out = QRCode.from(txtParaQrCode.getText())
                    .to(ImageType.valueOf(extArq))
                    .withSize(size, size)
                    .stream();
                    f.write(out.toByteArray());
                    f.flush();
                    f.close();
                }
                JOptionPane.showMessageDialog(rootPane, "Arquivo " + nomeArquivo
                    + " foi gerado com sucesso!", "Arquivo gerado", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if(txtParaNome.getText().equals("") & txtParaQrCode.getText().equals("")
            || txtParaNome.getText().equals("") | txtParaQrCode.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Informe o nome e/ou o conteúdo do arquivo!",
                "Campo(s) vazio(s)", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnGerarQrCodeActionPerformed

    private void btnLimparTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparTextoActionPerformed
        txtParaQrCode.setText(null);
    }//GEN-LAST:event_btnLimparTextoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerarQrCode;
    private javax.swing.JButton btnLimparNome;
    private javax.swing.JButton btnLimparTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelConteudoQR;
    private javax.swing.JLabel jLabelFundo;
    private javax.swing.JLabel jLabelNomeArquivo;
    private javax.swing.JLabel jLabelTamanhoImagem;
    private javax.swing.JMenu jMenuArquivo;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuInfo;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemSobre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelFormatoImagem;
    private javax.swing.JScrollPane jScrollPane1ConteudoQR;
    private javax.swing.JSlider jSliderTamanhoImagem;
    private javax.swing.JCheckBox jpgBox;
    private javax.swing.JCheckBox pngBox;
    private javax.swing.JTextField txtParaNome;
    private javax.swing.JTextArea txtParaQrCode;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/icon.png")));
    }
    
    private void setConfDefault() {
        //tam125Box.setSelected(true);
        pngBox.setSelected(true);
    }
}
